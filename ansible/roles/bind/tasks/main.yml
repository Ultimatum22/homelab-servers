---
# - name: Configure UFW
#   ansible.builtin.include_tasks: ufw.yml

# - name: Install required dependencies
#   ansible.builtin.apt:
#     name:
#       - build-essential
#       - libssl-dev
#       - libxml2-dev
#       - libjson-c-dev
#       - libuv1-dev
#       - libcap-dev
#       - libkrb5-dev
#       - libncurses5-dev
#       - libtool
#       - liblmdb-dev
#       - libprotobuf-c-dev
#       - libreadline-dev
#       - libsqlite3-dev
#       - libgeoip-dev
#       - libnghttp2-dev
#       - libpq-dev
#       - wget
#       - xz-utils
#       - zlib1g-dev
#     state: present

- name: Ensure bind is installed
  block:
    - name: Test bind
      ansible.builtin.command: bind --version
      register: bind_version_test
      changed_when: false

    - name: Test if correct version is installed
      ansible.builtin.assert:
        that:
          - bind_version in bind_version_test.stdout
        success_msg: "bind version {{ bind_version }} is installed"
        fail_msg: bind was not successfully installed
  rescue:
    - name: Ensure old bind is removed
      ansible.builtin.file:
        path: "{{ bind_install_dir }}/bind"
        state: absent

    - name: Create a temporary directory for the build
      tempfile:
        state: directory
        suffix: bind_build
      register: temp_build_dir

    - name: Download the BIND9 source code
      get_url:
        url: "{{ bind_url }}"
        dest: "{{ temp_build_dir.path }}/bind-{{ bind_version }}.tar.xz"

    - name: Extract the BIND9 tar.xz file
      unarchive:
        src: "{{ temp_build_dir.path }}/bind-{{ bind_version }}.tar.xz"
        dest: "{{ temp_build_dir.path }}"
        remote_src: yes
        extra_opts: [ "--strip-components=1" ]

    - name: Run configure with optimized options
      command: ./configure {{ configure_options }}
      args:
        chdir: "{{ temp_build_dir.path }}"

    - name: Compile BIND9
      make:
        chdir: "{{ temp_build_dir.path }}"

    - name: Install BIND9
      make:
        target: install
        chdir: "{{ temp_build_dir.path }}"
      become: yes

    - name: Clean up the temporary build directory
      file:
        path: "{{ temp_build_dir.path }}"
        state: absent

    - name: Create a symbolic link to the BIND9 binaries
      file:
        src: "{{ bind_prefix }}/sbin/named"
        dest: "/usr/sbin/named"
        state: link
      become: yes


    # - name: Install bind
    #   ansible.builtin.unarchive:
    #     src: "{{ bind_download_url }}"
    #     dest: "{{ bind_install_dir }}"
    #     owner: root
    #     group: root
    #     remote_src: true
    #     mode: "0777"

# - name: Create bind group
#   group:
#     name: "{{ bind_group }}"
#     system: true
#     state: present

# - name: Create bind user
#   user:
#     name: "{{ bind_user }}"
#     group: "{{ bind_group }}"
#     shell: /bin/false
#     createhome: false
#     system: true
#     state: present

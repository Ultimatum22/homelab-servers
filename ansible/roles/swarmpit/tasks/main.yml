---
- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0775"
  with_items:
    - "{{ docker_swarmpit.database_couchdb }}"
    - "{{ docker_swarmpit.database_influxdb }}"

- name: Create and start Swarm Couchdb container
  community.docker.docker_swarm_service:
    name: swarmpit_couchdb
    image: "{{ docker_swarmpit.image_database }}"
    env:
      OUCHDB_USER: admin
      COUCHDB_PASSWORD: password
    publish:
      - target_port: 5984
        published_port: 5984
    mounts:
      - source: "{{ docker_swarmpit.database_couchdb }}"
        target: /opt/couchdb/data
        type: bind
    restart_config:
      condition: any
      delay: 5s
      max_attempts: 3
      window: 120s
    update_config:
      delay: 10s
      order: start-first
      parallelism: 1
    rollback_config:
      parallelism: 0
      order: stop-first
    state: present
    mode: replicated
    placement:
      constraints:
        - node.role == worker
    networks:
      - homelab-databases

- name: Create and start Swarm Influxdb container
  community.docker.docker_swarm_service:
    name: swarmpit_influxdb
    image: "{{ docker_swarmpit.image_influxdb }}"
    env:
      reporting-disabled: "true"
    publish:
      - target_port: 8086
        published_port: 8086
    mounts:
      - source: "{{ docker_swarmpit.database_influxdb }}"
        target: /var/lib/influxdb2
        type: bind
    restart_config:
      condition: any
      delay: 5s
      max_attempts: 3
      window: 120s
    update_config:
      delay: 10s
      order: start-first
      parallelism: 1
    rollback_config:
      parallelism: 0
      order: stop-first
    state: present
    mode: replicated
    placement:
      constraints:
        - node.role == worker
    networks:
      - homelab-databases

- name: Create and start Swarm Web container
  community.docker.docker_swarm_service:
    name: swarmpit_web
    image: "{{ docker_swarmpit.image }}"
    env:
      reporting-disabled: "true"
      SWARMPIT_DB: http://swarmpit_couchdb:5984
      SWARMPIT_INFLUXDB: http://swarmpit_influxdb:8086
    mounts:
      - source: /var/run/docker.sock
        target: /var/run/docker.sock
        type: bind
        readonly: true
    labels:
      traefik.enable: "true"

      traefik.http.routers.swarmpit.rule: "Host(`{{ url_swarmpit }}`)"
      traefik.http.routers.swarmpit.entrypoints: https
      traefik.http.routers.swarmpit.tls: "true"
      traefik.http.routers.swarmpit.tls.certresolver: letsencrypt

      # Authelia Authentication Middleware
      traefik.http.routers.swarmpit.middlewares: chain-no-auth@file

      traefik.http.services.swarmpit.loadbalancer.server.port: "8080"

      homepage.group: Tools
      homepage.name: Swarmpit
      homepage.icon: swarmpit.svg
      homepage.href: https://{{ url_swarmpit }}
      homepage.description: Syncthing lets you synchronize your files bidirectionally across multiple devices.
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 60s
      timeout: 10s
      retries: 3
    restart_config:
      condition: any
      delay: 5s
      max_attempts: 3
      window: 120s
    update_config:
      delay: 10s
      order: start-first
      parallelism: 1
    rollback_config:
      parallelism: 0
      order: stop-first
    state: present
    mode: replicated
    placement:
      constraints:
        - node.role == manager
    networks:
      - homelab-databases
      - homelab-private

# - name: Deploy the 'influxdb' service
#   community.docker.docker_swarm_service:
#     name: influxdb
#     image: influxdb:1.7
#     volumes:
#       - influx-data:/var/lib/influxdb
#     networks:
#       - net
#     limits:
#       memory: 256M
#     reservations:
#       memory: 128M

# - name: Deploy the 'app' service
#   community.docker.docker_swarm_service:
#     name: app
#     image: swarmpit/swarmpit:latest
#     environment:
#       - SWARMPIT_DB=http://db:5984
#       - SWARMPIT_INFLUXDB=http://influxdb:8086
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock:ro
#     ports:
#       - 888:8080
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:8080"]
#       interval: 60s
#       timeout: 10s
#       retries: 3
#     networks:
#       - net
#     limits:
#       memory: 1024M
#     reservations:
#       memory: 512M
#     placement:
#       constraints:
#         - node.role == worker

# - name: Deploy the 'agent' service
#   community.docker.docker_swarm_service:
#     name: agent
#     image: swarmpit/agent:latest
#     environment:
#       - DOCKER_API_VERSION=1.35
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock:ro
#     networks:
#       - net
#     mode: global
#     labels:
#       swarmpit.agent: 'true'
#     limits:
#       memory: 64M
#     reservations:
#       memory: 32M

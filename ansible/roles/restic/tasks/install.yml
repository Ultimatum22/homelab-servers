---
- name: Create a temporary directory for the install
  ansible.builtin.tempfile:
    state: directory
  register: temp_install_dir

- name: Ensure Restic is installed
  block:
    - name: Test restic
      ansible.builtin.command: restic version
      register: restic_version_test
      changed_when: false

    - name: Test if correct version is installed
      ansible.builtin.assert:
        that:
          - restic_version in restic_version_test.stdout
        success_msg: "Restic version {{ restic_version }} is installed"
        fail_msg: Restic was not successfully installed
  rescue:
    - name: Ensure old restic is removed
      ansible.builtin.file:
        path: "{{ restic_install_dir }}/restic"
        state: absent

    - name: Install dir
      debug:
        var: temp_install_dir.path

    - name: Download client binary
      ansible.builtin.get_url:
        url: "{{ restic_download_url }}"
        dest: "{{ temp_install_dir.path }}/restic.bz2"
        force: true
        mode: 0644
      register: get_url_restic

    - name: Decompress the binary
      ansible.builtin.shell: "bzip2 -dc {{ get_url_restic.dest }} > {{ restic_install_dir }}/restic"

    - name: Ensure permissions are correct
      ansible.builtin.file:
        path: "{{ restic_install_dir }}/restic"
        owner: root
        group: root
        mode: "0755"

    - name: Clean up the temporary install directory
      ansible.builtin.file:
        path: "{{ temp_install_dir.path }}"
        state: absent

- name: Initialize repository
  ansible.builtin.command: "{{ restic_install_dir }}/restic init"
  environment:
    RESTIC_REPOSITORY: "{{ secret_restic_backblaze_location }}"
    RESTIC_PASSWORD: "{{ secret_restic_password }}"
    AWS_ACCESS_KEY_ID: "{{ secret_restic_backblaze_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ secret_restic_backblaze_secret_access_key }}"
  register: restic_init
  changed_when: "'created restic repository' in restic_init.stdout"
  failed_when:
    - restic_init.rc != 0
    - not "config file already exists" in restic_init.stderr
    - not "config already initialized" in restic_init.stderr
    - not "config already exists" in restic_init.stderr

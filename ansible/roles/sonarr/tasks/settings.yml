---
- name: Wait for 'config.xml' to be created
  ansible.builtin.wait_for:
    path: "{{ docker_sonarr.config }}/config.xml"
    state: present

- name: Override API key
  community.general.xml:
    path: "{{ docker_sonarr.config }}/config.xml"
    xpath: /Config/ApiKey
    value: "{{ secret_sonarr_api_key }}"

- name: Override AuthenticationRequired settings
  community.general.xml:
    path: "{{ docker_sonarr.config }}/config.xml"
    xpath: /Config/AnalyticsEnabled
    value: "False"

- name: Get infos on Sonarr container
  community.docker.docker_container_info:
    name: sonarr
  register: container_info

- name: "Wait for Sonarr API to come up and returns a status 200"
  ansible.builtin.uri:
    url: "http://{{ host_poseidon_ip }}:{{ docker_port_sonarr_http }}/api/v3/system/status"
    headers:
      X-Api-Key: "{{ secret_sonarr_api_key }}"
  register: api_result
  until: api_result.status == 200
  retries: 30
  delay: 3

- name: "Add Root Folder"
  ansible.builtin.uri:
    url: "http://{{ host_poseidon_ip }}:{{ docker_port_sonarr_http }}/api/v3/rootFolder"
    method: POST
    status_code:
      - 201
      - 400
    body: "{{ lookup('template', 'post_rootfolder_body.json.j2') }}"
    body_format: json
    headers:
      X-Api-Key: "{{ secret_sonarr_api_key }}"

- name: "Add Download Client"
  ansible.builtin.uri:
    url: "http://{{ host_poseidon_ip }}:{{ docker_port_sonarr_http }}/api/v3/downloadclient"
    method: POST
    status_code:
      - 201
      - 400
    body: "{{ lookup('template', 'post_downloadclient_body.json.j2') }}"
    body_format: json
    headers:
      X-Api-Key: "{{ secret_sonarr_api_key }}"

- name: "Add Notification"
  ansible.builtin.uri:
    url: "http://{{ host_poseidon_ip }}:{{ docker_port_sonarr_http }}/api/v3/notification"
    method: POST
    status_code:
      - 201
      - 400
    body: "{{ lookup('template', 'post_notification_body.json.j2') }}"
    body_format: json
    headers:
      X-Api-Key: "{{ secret_sonarr_api_key }}"

- name: "Add MediaManagementConfig"
  ansible.builtin.uri:
    url: "http://{{ host_poseidon_ip }}:{{ docker_port_sonarr_http }}/api/v3/config/mediamanagement/1"
    method: PUT
    status_code:
      - 202
      - 400
    body: "{{ lookup('template', 'put_mediamanagement_body.json.j2') }}"
    body_format: json
    headers:
      X-Api-Key: "{{ secret_sonarr_api_key }}"

# - name: "Add Naming"
#   ansible.builtin.uri:
#     url: "http://{{ host_poseidon_ip }}:{{ docker_port_sonarr_http }}/api/v3/config/naming/1"
#     method: PUT
#     status_code:
#       - 202
#       - 400
#     body: "{{ lookup('template', 'put_naming_body.json.j2') }}"
#     body_format: json
#     headers:
#       X-Api-Key: "{{ secret_sonarr_api_key }}"

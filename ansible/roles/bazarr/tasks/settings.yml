---
- name: Wait for "config.yaml" to be created
  ansible.builtin.wait_for:
    path: "{{ docker_bazarr.config }}/config/config.yaml"
    state: present

- name: Replace auth.apikey with x
  ansible.builtin.replace:
    path: "{{ docker_bazarr.config }}/config/config.yaml"
    regexp: "^auth:\n[ ]+apikey:.*"
    replace: "auth:\n  apikey: {{ secret_bazarr_api_key }}"
    backup: yes

- name: Replace general.use_sonarr with true
  ansible.builtin.replace:
    path: "{{ docker_bazarr.config }}/config/config.yaml"
    regexp: "^general:\n[ ]+use_sonarr:.*"
    replace: "general:\n  use_sonarr: true"
    backup: yes

- name: Replace general.use_radarr with true
  ansible.builtin.replace:
    path: "{{ docker_bazarr.config }}/config/config.yaml"
    regexp: "^general:\n[ ]+use_radarr:.*"
    replace: "general:\n  use_radarr: true"
    backup: yes

- name: Replace general.enabled_providers with [x]
  ansible.builtin.replace:
    path: "{{ docker_bazarr.config }}/config/config.yaml"
    regexp: "^general:\n[ ]+enabled_providers:.*"
    replace: "general:\n  enabled_providers: [x]"
    backup: yes

- name: Replace sonarr.apikey with x
  ansible.builtin.replace:
    path: "{{ docker_bazarr.config }}/config/config.yaml"
    regexp: "^sonarr:\n[ ]+apikey:.*"
    replace: "sonarr:\n  apikey: {{ secret_sonarr_api_key }}"
    backup: yes

- name: Replace radarr.apikey with x
  ansible.builtin.replace:
    path: "{{ docker_bazarr.config }}/config/config.yaml"
    regexp: "^radarr:\n[ ]+apikey:.*"
    replace: "radarr:\n  apikey: {{ secret_radarr_api_key }}"
    backup: yes

# - name: Update config.yaml file
#   ansible.builtin.lineinfile:
#     path: "{{ docker_bazarr.config }}/config/config.yaml"
#     regexp: "{{ item.regexp }}"
#     line: "{{ item.line }}"
#     state: present
#   loop:
#     - { regexp: "^auth:\s*apikey:\s*", line: "auth:\n  apikey: "{{ secret_bazarr_api_key }}"" }
#     - { regexp: "^general:\s*use_sonarr:\s*", line: "general:\n  use_sonarr: true" }
#     - { regexp: "^general:\s*use_radarr:\s*", line: "general:\n  use_radarr: true" }
#     - { regexp: "^general:\s*enabled_providers:\s*", line: "general:\n  enabled_providers:\n    - opensubtitlescom\n    - tvsubtitles\n    - subf2m" }
#     - { regexp: "^sonarr:\s*apikey:\s*", line: "sonarr:\n  apikey: "{{ secret_sonarr_api_key }}"" }
#     - { regexp: "^radarr:\s*apikey:\s*", line: "radarr:\n  apikey: "{{ secret_radarr_api_key }}"" }
#     - { regexp: "^opensubtitlescom:\s*username:\s*", line: "opensubtitlescom:\n  username: "{{ secret_bazarr_opensubtitlescom_username }}"" }
#     - { regexp: "^opensubtitlescom:\s*password:\s*", line: "opensubtitlescom:\n  password: "{{ secret_bazarr_opensubtitlescom_password }}"" }

---
- name: Create network
  community.general.docker_network:
    name: "{{ item }}"
    driver: overlay
    scope: swarm
  with_items:
    - traefik
    - internal
  when: inventory_hostname == groups['cluster'][0]

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0775"
  with_items:
    - "{{ docker_traefik.config }}"
    - "{{ docker_traefik.data }}"
    - "{{ docker_traefik.data }}/config"

- name: Copy traefik.toml
  ansible.builtin.template:
    src: "traefik.toml.j2"
    dest: "{{ docker_traefik.config }}/traefik.toml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"

- name: Copy rules
  ansible.builtin.template:
    src: "config/{{ item }}.yml.j2"
    dest: "{{ docker_traefik.data }}/config/{{ item }}.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  with_items:
    - tls-opts
    - middlewares-rate-limit
    - middlewares-secure-headers

- name: Create traefik volumes
  community.docker.docker_volume:
    name: "{{ item }}"
  with_items:
    - config
    - certificates
  when: inventory_hostname == groups['cluster'][0]

- name: Create and start Traefik container
  community.docker.docker_swarm_service:
    name: traefik
    image: "{{ docker_traefik.image }}"
    env:
      - CLOUDFLARE_DNS_API_TOKEN={{ secret_cloudflare_zone_token }}
      - CLOUDFLARE_HTTP_TIMEOUT=60
      - CLOUDFLARE_POLLING_INTERVAL=10
      - CLOUDFLARE_PROPAGATION_TIMEOUT=3600
      - CLOUDFLARE_TTL=300
    networks:
      - traefik
    ports:
        - target: 80
        published: 80
      - target: 443
        published: 443
      - target: 8080
        published: 8080
    labels:
      traefik.enable: "true"
      traefik.http.routers.api.rule: "Host(`traefik.{{ root_domain }}`)"
      traefik.http.routers.api.service: api@internal
      traefik.http.routers.api.entrypoints: websecure
      traefik.http.routers.api.tls: "true"
      traefik.http.services.api.loadbalancer.server.port: "8080"

      homepage.group: Home
      homepage.name: Traefik
      homepage.icon: traefik
      homepage.href: "https://traefik.{{ root_domain }}"
      homepage.description: The Cloud Native Application Proxy

    mounts:
      - source: /var/run/docker.sock
        target: /var/run/docker.sock
        type: bind
      - source: acme
        target: /etc/traefik/acme
        type: volume
      - source: traefik
        target: /config
        type: volume
      - source: cloudflare
        target: /cloudflare
        type: volume
      - source: "{{ docker_traefik.config }}/traefik.toml"
        target: /traefik.toml
        type: bind
    state: present
    mode: replicated
    placement:
      constraints:
        - node.role == manager
  when: inventory_hostname == groups['cluster'][0]

---
- name: Create network
  community.general.docker_network:
    name: "{{ item }}"
    driver: overlay
    scope: swarm
  with_items:
    - traefik
    - internal

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0775"
  with_items:
    - "{{ docker_traefik.config }}"
    - "{{ docker_traefik.data }}"

- name: Copy traefik.toml
  ansible.builtin.template:
    src: "traefik.toml.j2"
    dest: "{{ docker_traefik.config }}/traefik.toml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"

- name: Create acme.json
  ansible.builtin.file:
    path: "{{ docker_traefik.data }}/acme.json"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: touch
    mode: "0600"

- name: Create traefik.log
  ansible.builtin.file:
    path: "{{ docker_traefik.data }}/traefik.log"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: touch
    mode: "0644"

- name: Create traefik volumes
  community.docker.docker_volume:
    name: "{{ item }}"
  with_items:
    - config

- name: Create and start Traefik container
  community.docker.docker_swarm_service:
    name: traefik
    image: "{{ docker_traefik.image }}"
    env:
      - CLOUDFLARE_DNS_API_TOKEN={{ secret_cloudflare_zone_token }}
      - CLOUDFLARE_HTTP_TIMEOUT=60
      - CLOUDFLARE_POLLING_INTERVAL=10
      - CLOUDFLARE_PROPAGATION_TIMEOUT=3600
      - CLOUDFLARE_TTL=300
    networks:
      - traefik
    publish:
      # HTTP
      - target_port: 80
        published_port: 80
      # HTTPS
      - target_port: 443
        published_port: 443
      # Web UI (enabled by --api.insecure=true)
      - target_port: 8080
        published_port: 8080
    labels:
      traefik.enable: "true"

      traefik.http.routers.api.rule: "Host(`traefik.{{ root_domain }}`)"
      traefik.http.routers.api.service: api@internal
      traefik.http.routers.api.entrypoints: websecure
      traefik.http.routers.api.tls: "true"

      traefik.http.services.api.loadbalancer.server.port: "8080"

      # diun.enable: "true"
      # homepage.group: Home
      # homepage.name: Traefik
      # homepage.icon: traefik
      # homepage.href: "http://{{ url_traefik }}"
      # homepage.description: Easily add recipes into your database by providing the URL and Traefik will automatically import the relevant data.
    mounts:
      - source: /var/run/docker.sock
        target: /var/run/docker.sock
        type: bind
      - source: "{{ docker_traefik.data }}/acme.json"
        target: /acme.json
        type: bind
      - source: "{{ docker_traefik.data }}/traefik.log"
        target: /traefik.log
        type: bind
      - source: "{{ docker_traefik.config }}/traefik.toml"
        target: /traefik.toml
        type: bind
      - source: config
        target: /etc/config
        type: volume
    state: present
    mode: global
    placement:
      constraints:
        - node.role == manager

---
- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0775"
  with_items:
    - "{{ docker_jellyfin.config }}"
    - "{{ docker_jellyfin.config }}/plugins"
    - "{{ docker_jellyfin.data }}"
    - "{{ media_movies }}"
    - "{{ media_tvshows }}"


- name: Deploy and start Jellyfin service
  community.docker.docker_swarm_service:
    name: jellyfin
    image: "{{ docker_jellyfin.image }}"
    env:
      TZ: "{{ system_timezone }}"
      PUID: "{{ ansible_user_pid | int }}"
      PGID: "{{ ansible_user_gid | int }}"
    mounts:
      - source: "{{ docker_jellyfin.config }}"
        target: /config
        type: bind
      - source: "{{ media_tvshows }}"
        target: /data/tvshows
        type: bind
      - source: "{{ media_movies }}"
        target: /data/movies
        type: bind
    networks:
      - homelab-private
    labels:
      traefik.enable: "true"

      # Traefik routing for PiHole
      traefik.http.routers.jellyfin.rule: "Host(`{{ url_jellyfin }}`)"
      traefik.http.routers.jellyfin.entrypoints: https
      traefik.http.routers.jellyfin.tls: "true"
      traefik.http.routers.jellyfin.tls.certresolver: letsencrypt

      # Authelia Authentication Middleware
      traefik.http.routers.jellyfin.middlewares: chain-no-auth@file

      traefik.http.services.jellyfin.loadbalancer.server.port: "8096"

      homepage.group: Media
      homepage.name: Jellyfin
      homepage.icon: jellyfin.png
      homepage.href: https://{{ url_jellyfin }}
      homepage.description: Stream to any device from your own server
    restart_config:
      condition: any
      delay: 5s
      max_attempts: 3
      window: 120s
    update_config:
      delay: 10s
      order: start-first
      parallelism: 1
    rollback_config:
      parallelism: 0
      order: stop-first
    state: present
    mode: replicated
    placement:
      constraints:
        - node.role == manager


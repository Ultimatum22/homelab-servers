---
- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0775"
  with_items:
    - "{{ docker_vpn.config }}"

- name: Deploy and start VPN service
  community.docker.docker_swarm_service:
    name: vpn
    image: "{{ docker_vpn.image }}"
    publish:
      - target_port: 8888
        published_port: 8888
        protocol: tcp
      - target_port: 8388
        published_port: 8388
        protocol: tcp
      - target_port: 8388
        published_port: 8388
        protocol: udp
    cap_add:
      - NET_ADMIN
    env:
      TZ: "{{ system_timezone }}"
      PUID: "{{ ansible_user_pid | int }}"
      PGID: "{{ ansible_user_gid | int }}"
      VPN_SERVICE_PROVIDER: "NordVPN"
      OPENVPN_USER: "{{ secret_vpn_user }}"
      OPENVPN_PASSWORD: "{{ secret_vpn_password }}"
      # SERVER_REGION: ${SERVER_REGION:?err}
      # SERVER_CITIES: ${SERVER_CITIES}
      SERVER_HOSTNAMES: "{{ server_countries }}"
      FIREWALL_OUTBOUND_SUBNETS: "{{ local_subnet }}"
      VPN_TYPE: "openvpn"
      HTTPPROXY: "on"
      SHADOWSOCKS: "on"
      # TOKEN: "{{ nordvpn_token }}"
      # CONNECT: fr765
      # TECHNOLOGY: NordLynx
      # NETWORK: 192.168.2.0/24
      # CHECK_CONNECTION_INTERVAL: "60"
      # DEBUG: trace
      net.ipv6.conf.all.disable_ipv6: "1"
    mounts:
      - source: /etc/localtime
        target: /etc/localtime
        type: bind
        readonly: true
      - source: /dev/net/tun
        target: /dev/net/tun
        type: bind
      - source: "{{ docker_vpn.config }}"
        target: /gluetun
        type: bind
    # sysctls:
    #   net.ipv6.conf.all.disable_ipv6: "1"
    networks:
      - homelab-private
      - homelab-vpn
    labels:
      homepage.group: Download
      homepage.name: NordVPN
      homepage.icon: nordvpn.png
      homepage.description: Modern web UI for various torrent clients
    restart_config:
      condition: any
      delay: 5s
      max_attempts: 3
      window: 120s
    update_config:
      delay: 10s
      order: start-first
      parallelism: 1
    rollback_config:
      parallelism: 0
      order: stop-first
    state: present
    mode: replicated
    placement:
      constraints:
        - node.role == worker

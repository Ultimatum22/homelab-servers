---
- name: Install required packages
  ansible.builtin.apt:
    package: "{{ item }}"
    state: present
  with_items:
    - python3-requests

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0775"
  with_items:
    - "{{ docker_homepage.config }}"

# - name: Create and start dockerproxy container
#   community.general.docker_container:
#     name: dockerproxy
#     image: ghcr.io/tecnativa/docker-socket-proxy:0.2.0
#     pull: true
#     image_name_mismatch: "recreate"
#     recreate: true
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock:ro  # Mounted as read-only
#     networks:
#       - name: homelab
#         aliases:
#           - dockerproxy
#     ports:
#       - 2375:2375
#     restart_policy: unless-stopped
#     state: started
#     env:
#       CONTAINERS: "1"  # Allow access to viewing containers
#       POST: "0"  # Disallow any POST operations (effectively read-only)

- name: Create and start Homepage container
  community.docker.docker_swarm_service:
    name: homepage
    image: "{{ docker_homepage.image }}"
    networks:
      - homelab-public
    env:
      TZ: "{{ system_timezone }}"
    labels:
      traefik.enable: "true"
      traefik.docker.network: homelab-public

      # Traefik routing for Home Assistant
      traefik.http.routers.homepage.rule: "Host(`homepage.{{ root_domain }}`)"
      traefik.http.routers.homepage.entrypoints: https
      traefik.http.routers.homepage.tls: "true"
      traefik.http.routers.homepage.tls.certresolver: letsencrypt
      # Authelia Authentication Middleware
      traefik.http.routers.homepage.middlewares: chain-no-auth@file

      traefik.http.services.homepage.loadbalancer.server.port: "3000"
    mounts:
      - source: /var/run/docker.sock
        target: /var/run/docker.sock
        type: bind
        readonly: true
      - source: "{{ docker_homepage.config }}"
        target: /app/config
        type: bind
    restart_config:
      condition: any
      delay: 5s
      max_attempts: 3
      window: 120s
    update_config:
      delay: 10s
      order: start-first
      parallelism: 1
    rollback_config:
      parallelism: 0
      order: stop-first
    state: present
    mode: replicated
    placement:
      constraints:
        - node.role == worker

- name: Homepage Settings Tasks
  ansible.builtin.include_tasks: "settings.yml"

version: '3.3'

services:
  app:
    image: swarmpit/swarmpit:1.9
    environment:
      - SWARMPIT_DB=http://db:5984
      - SWARMPIT_INFLUXDB=http://influxdb:8086
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 888:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 60s
      timeout: 10s
      retries: 3
    networks:
      - traefik
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 512M
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik"  

        # HTTP Routers
        - "traefik.http.routers.swarmpit-rtr.entrypoints=websecure"
        - "traefik.http.routers.swarmpit-rtr.rule=Host(`swarmpit.{{ root_domain }}`)"
        # HTTP Services
        - "traefik.http.routers.swarmpit-rtr.service=swarmpit-svc"
        - "traefik.http.services.swarmpit-svc.loadbalancer.server.port=888"

        # - "traefik.constraint=proxy-public"
  db:
    image: treehouses/couchdb:2.3.1
    volumes:
      - db-data:/opt/couchdb/data
    networks:
      - traefik
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  influxdb:
    image: influxdb:1.8
    volumes:
      - influx-data:/var/lib/influxdb
    networks:
      - traefik
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  agent:
    image: swarmpit/agent:2.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik
    deploy:
      mode: global
      labels:
        swarmpit.agent: 'true'
      resources:
        limits:
          memory: 64M
        reservations:
          memory: 32M

networks:
  traefik:
    external: true

volumes:
  db-data:
    driver: local
  influx-data:
    driver: local

---
- name: Create network
  community.general.docker_network:
    name: "{{ item }}"
    driver: overlay
    scope: swarm
  with_items:
    - traefik
    - internal
  when: inventory_hostname == groups['cluster'][0]

- name: Create Pihole volumes
  community.docker.docker_volume:
    name: "{{ item }}"
  with_items:
    - pihole_data
    - pihole_dnsmasq

- name: Deploy and start Pi-hole service
  community.docker.docker_swarm_service:
    name: pihole
    image: pihole/pihole:2024.07.0
    publish:
      - target_port: 53
        published_port: 53
        protocol: tcp
        mode: host
      - target_port: 53
        published_port: 53
        protocol: udp
        mode: host
    labels:
      traefik.enable: "true"
      traefik.http.routers.pihole.rule: "Host(`pihole.{{ root_domain }}`)"
      traefik.http.routers.pihole.entrypoints: https
      traefik.http.routers.pihole.tls: "true"
      traefik.http.routers.pihole.tls.certresolver: letsencrypt
      traefik.http.routers.pihole.service: pihole@swarm
      traefik.http.routers.pihole.middlewares: authelia@swarm,pihole-redirectregex@file,pihole-addprefix@file
      traefik.http.services.pihole.loadbalancer.server.port: "80"
    env:
      TZ: "{{ system_timezone }}"
      WEBPASSWORD: "{{ secret_pihole_webpassword }}"
    mounts:
      - source: pihole_data
        target: /etc/pihole
        type: volume
      - source: pihole_dnsmasq
        target: /etc/dnsmasq.d
        type: volume
    networks:
      - traefik
    state: present
    mode: replicated
    placement:
      constraints:
        - node.role == manager
  when: inventory_hostname == groups['cluster'][0]
